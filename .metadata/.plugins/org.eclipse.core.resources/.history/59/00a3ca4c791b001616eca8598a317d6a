/**
 * 
 */
package ru.rb.ccdea.storage.persistence;

import java.util.Date;
import java.util.List;

import org.junit.Test;

import com.documentum.com.DfClientX;
import com.documentum.com.IDfClientX;
import com.documentum.fc.client.IDfClient;
import com.documentum.fc.client.IDfSession;
import com.documentum.fc.client.IDfSessionManager;
import com.documentum.fc.client.IDfSysObject;
import com.documentum.fc.common.DfException;
import com.documentum.fc.common.DfId;
import com.documentum.fc.common.IDfId;
import com.documentum.fc.common.IDfLoginInfo;

/**
 * @author SotnikovAV
 *
 */
public class TestExternalMessagePersistence {

	@Test
	public void testGetValidFirstMessageList() {
		IDfSession testSession = null;
		IDfClientX clientx = new DfClientX();
		IDfClient client = null;
		IDfSessionManager sessionManager = null;
		try {
			client = clientx.getLocalClient();
			sessionManager = client.newSessionManager();

			IDfLoginInfo loginInfo = clientx.getLoginInfo();
			loginInfo.setUser("dmadmin");
			loginInfo.setPassword("dmadmin");
			loginInfo.setDomain(null);

			sessionManager.setIdentity("UCB", loginInfo);
			testSession = sessionManager.getSession("UCB");

			String messageType = "DocPut";
			List<IDfId> messageIds = ExternalMessagePersistence.getValidFirstMessageList(testSession, messageType, new Date());
			
//			Assert.assertNotNull(dossier);
			System.out.println("Message ids = " + messageIds.toString());
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			if (testSession != null) {
				sessionManager.release(testSession);
			}
		}
	}
	
	IDfSession testSession = null;
	
	@Test
	public void testBeginProcessContentMsgMultiThread() {
		
		IDfClientX clientx = new DfClientX();
		IDfClient client = null;
		IDfSessionManager sessionManager = null;
		try {
			client = clientx.getLocalClient();
			sessionManager = client.newSessionManager();

			IDfLoginInfo loginInfo = clientx.getLoginInfo();
			loginInfo.setUser("dmadmin");
			loginInfo.setPassword("Fkut,hf15");
			loginInfo.setDomain(null);

			sessionManager.setIdentity("ELAR", loginInfo);
			testSession = sessionManager.getSession("ELAR");
			
			Runnable r1 = new Runnable() {

				@Override
				public void run() {
					try {
						
						boolean isTransAlreadyActive = testSession.isTransactionActive();
						try {
							if (!isTransAlreadyActive) {
								testSession.beginTrans();
							}
							IDfSysObject messageSysObject = (IDfSysObject) testSession.getObject(new DfId("08035f5580215b32"));
							messageSysObject.lock();
							Thread.sleep(2000);
							int currentState = messageSysObject.getInt(ExternalMessagePersistence.ATTR_CURRENT_STATE);
							if (ExternalMessagePersistence.MESSAGE_STATE_VALIDATION_PASSED == currentState) {
								ExternalMessagePersistence.startContentProcessing(messageSysObject, null);
								messageSysObject.save();
								System.out.println(true);
							} else {
								System.out.println(false);
							}
						} finally {
							if (!isTransAlreadyActive && testSession.isTransactionActive()) {
								testSession.commitTrans();
							}
						}
					} catch (DfException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				
			};
			
			Runnable r2 = new Runnable() {

				@Override
				public void run() {
					try {
						
						boolean isTransAlreadyActive = testSession.isTransactionActive();
						try {
							if (!isTransAlreadyActive) {
								testSession.beginTrans();
							}
							IDfSysObject messageSysObject = (IDfSysObject) testSession.getObject(new DfId("08035f5580215b32"));
							messageSysObject.lock();
							Thread.sleep(2000);
							int currentState = messageSysObject.getInt(ExternalMessagePersistence.ATTR_CURRENT_STATE);
							if (ExternalMessagePersistence.MESSAGE_STATE_VALIDATION_PASSED == currentState) {
								ExternalMessagePersistence.startContentProcessing(messageSysObject, null);
								messageSysObject.save();
								System.out.println(true);
							} else {
								System.out.println(false);
							}
						} finally {
							if (!isTransAlreadyActive && testSession.isTransactionActive()) {
								testSession.commitTrans();
							}
						}
					} catch (DfException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				
			};
			
			for(int i=0;i<100;i++) {
				Thread t1 = new Thread(r1);
				t1.start();
				Thread t2 = new Thread(r2);
				t2.start();
			}
			
			Thread.sleep(100000);
			
//			Assert.assertNotNull(dossier);
//			System.out.println("Message ids = " + messageIds.toString());
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			if (testSession != null) {
				sessionManager.release(testSession);
			}
		}
	}
	
}
